# Use postgres/example user/password credentials
version: '3.1'

services:
  react-app:
    build: ./pc-configurator
    ports:
      - 3000:80
    volumes:
      - /app/node_modules
    depends_on:
      - postgres

  postgres:
    image: postgres:14.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root
      - POSTGRES_DB=root
    ports:
      - "5432:5432"
    volumes:
      - ./db-create/tables_create.sql:/docker-entrypoint-initdb.d/database-seed.sql
      # - ./dbdata:/var/lib/backup/data
      - ./db:/var/lib/postgresql/data
      
  backend:
    build: ./server
    depends_on:
      - postgres
    volumes:
      - /server/node_modules
      - ./server:/server
    ports:
      - "8080:8080"

  # pgbackups:
  #   container_name: Backup
  #   image: prodrigestivill/postgres-backup-local
  #   restart: always
  #   volumes:
  #     - ./backup:/backups
  #   links:
  #     - postgres
  #   depends_on:
  #     - postgres
  #   environment:
  #     - POSTGRES_HOST=postgres
  #     - POSTGRES_DB=root
  #     - POSTGRES_USER=root
  #     - POSTGRES_PASSWORD=root
  #     - POSTGRES_EXTRA_OPTS=-Z9 --schema=public --blobs
  #     - SCHEDULE=@every 0h0m00s
  #     - BACKUP_KEEP_DAYS=7
  #     - BACKUP_KEEP_WEEKS=4
  #     - BACKUP_KEEP_MONTHS=6
  #     - HEALTHCHECK_PORT=81

  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:7
    restart: always
    user: "${UID}:${GID}"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    ports:
      - "16543:80"
    volumes:
      - ./pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres

# volumes:
#   db:
#     driver: local
# docker run postgres:14.1-alpine -p 5432:5432 -e POSTGRES_USER=root -e POSTGRES_PASSWORD=root -e POSTGRES_DB=root -d -v "$(pwd)/db":/var/lib/postgresql/data